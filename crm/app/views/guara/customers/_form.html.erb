<%= semantic_form_for @customer, :html => {:class => (params[:remote]=="true" ? "well remote_form" : "well")}, :remote => (params[:remote]=="true")  do |f| %>
<%= f.semantic_fields_for @customer.customer do |person_f| %>
<%= render 'shared/guara/error_messages', object: f.object %>
<fieldset>
	<legend><%= @customer.new_record? ? t("customers.new.title") : t("customers.edit.title") %></legend>
	<div class="row">
		<%= hidden_field_tag :remote, "true" %> 
		<%= f.input :complete, :label => false %>

		<div class="span4">
			<%= f.input :doc, :label => t("customer_#{@customer_type}s.doc") , :input_html => { :class => (@customer_type=="pj" ? "cnpj" : "cpf") } %>
			<%= f.input :doc_rg, :label => t("customer_#{@customer_type}s.doc_rg") %>
			<%= f.input :name_sec, :label => t("customer_#{@customer_type}s.name_sec") %>
			<%= f.input :name, :label => t("customer_#{@customer_type}s.name") %>
			<%= f.input :postal, :input_html => { :class => "postal" } %>

			<div class="control-group">
				<%= f.label :state_id, :class => "control-label" %>
				<div class="controls">
					<%= f.collection_select(:state_id, Guara::State.all, :id, :acronym, :include_blank => true) %>
				</div>
			</div>

			<div class="control-group">
				<%= f.label :city_id, :class => "control-label" %>
				<div class="controls">
					<%= f.collection_select(:city_id, Guara::City.order("name ASC").all, :id, :name, :include_blank => true) %>
				</div>
			</div>

			<div class="control-group">
				<%= f.label :district_id, :class => "control-label" %>
				<div class="controls">
					<%= f.collection_select(:district_id, Guara::District.order(:name), :id, :name, :include_blank => true) %>
				</div>
			</div>

			<%= f.input :address %>
			<%= f.input :number %>



		</div>
		<div class="span4 column2">


			<%= f.input :phone, :input_html => { :class => "phone" } %>
			<%= f.fields_for :phones do |phones_f| %>
			<%= phones_f.input :phone, :input_html => { :class => "phone" } %>
			<% end %>

			<%= f.input :site %>

			<%= f.input :social_link %>

			<%= f.input :other_contacts %>
			
			<% 
			
			if @customer_type == "pj" %>
				<%= person_f.input :fax, :input_html => { :class => "phone" } %>
				<%= person_f.input :total_employes %>
			<% else %>
				<%= person_f.input :civil_state, :as=> :select, :collection => Guara::CustomerPf.civil_state_translated.map{|a, b| [b, a]}, :label => t("customer_pfs.civil_state")  %>

				<%= person_f.input :gender, :as=> :select, :collection => Guara::CustomerPf.gender_translated.map{|a, b| [b, a]}, :label => t("customer_pfs.gender")  %>

				<%= person_f.input :company, :label => t("customer_pfs.company") %>
			<% end %>
			
			<%= f.input :notes, :as => :text, :input_html => { rows: 2  } %>

		</div>
		
		<div class="span3 column2">	
			
			<% if @customer_type == "pj" %>
			<div class="control-group">
				<%= person_f.label :activities, :class => "control-label" %>
				<div class="controls">					
					<%= select_tag :activities,
					options_for_select( 
						Guara::BusinessActivity.joins(:business_segment).all.map do |a|
							[[(a.business_segment || Guara::BusinessSegment.first).name ,a.name].join(": "), a.id]
						end,
						params[:activities] || @person.activities.map { |a| a.id }
						), 
					{ :multiple => true, 
						:style => "width: 200px;", 
						:placeholder => t("customer_pjs.activities") + ' : ' + t("customer_pjs.segments"), 
						:class => "multiselect" 
					}
					%>
				</div>
			</div>

			<div class="control-group">
				<%= person_f.label t("customers.associateds"), :class => "control-label" %>
				<div class="controls">
					<%= select_tag :associateds_select, options_from_collection_for_select(@person.associateds, 'id', 'name', @person.associateds.collect {|a| a.id}), {
						:multiple => true,
						:style => "width: 200px;", 
						:placeholder => t("customers.associateds"), 
						:class => "multiselect" ,
						:"data-json-url" => multiselect_customers_pj_customers_path,
						:"data-multiple" => "true"
					}
					%>					
				</div>
			</div>
			
			<% end %>

			<div class="thumbnail emails_custumer">
				<%= t("customers.emails").titleize %>
				<%= render :partial => 'active_extend/one_to_many_inputs', 
				:locals => { 
					:values => @customer.emails, 
					:form => f, 
					:target => :emails,
					:inputs => { 
						:email => { 
							:as => :string, 
							:class => "span2", 
							:label => false, 
							:placeholder => "e-mail", 
							:glyph => "icon-envelope" 
						} 
					},
					:options => {
							add_class: "btn btn-block"
					}
				} %>
			</div>


		</div>
		
		<div class="span8">
			<div class="form-actions">
				<%= f.submit :class => "btn btn-primary" %>

				<%= link_to_function t("helpers.forms.cancel"), "history.back()", :class => "btn" %>

			</div>
		</div>
	</div>
</fieldset>
	<input type="hidden" name="type" value="<%= params[:type] %>">
<% end %>
<% end %>

<script>

$(function(){
	
	$("input.cnpj").mask("99.999.999/9999-99");
	$("input.cpf").mask("999.999.999-99");
	$("input.phone").mask("99.9999-9999");
	$("input.postal").mask("99.999-999");

	function get_value_for_text(select_id, text){
		$('#'+select_id+' option').each(function(index, attr){
			if($(attr).text().toLowerCase()==text.toLowerCase()){
				$('#'+select_id).val($(attr).val());
			}
		});
	}

	function set_options_for_select(select_id, response, callback){
		var options = '<option value=""></option>';	
		for (var i = 0; i < response.length; i++) {
			options += '<option value="' + response[i].id + '">' + response[i].value + '</option>';
		}	
		$('#'+select_id).html(options).show();

		if(typeof callback == 'function'){
			callback();
		}
	}

	$("#customer_postal").blur(function(){
		var cep = $("#customer_postal").val().replace(/\D/g, '');
		$.getJSON('http://cep.correiocontrol.com.br/'+cep+'.json', function(response){
			get_value_for_text('customer_state_id', response.uf);
			get_value_for_text('customer_city_id', response.localidade);
			get_value_for_text('customer_district_id', response.bairro);
			$('#customer_address').val(response.logradouro);
		});
	});
	

	$("form.customer").submit(function() {
		$("input.postal").val($("input.postal").val().replace(/\D/g, "")).unmask();
	})
});

</script>