<%# encoding: utf-8 %>

var scheduled_contacts_form_js_init = (function() {

  $( "#datepicker" ).datepicker($.datepicker.regional[ "pt-BR" ]);

  $("#hour").mask("99:99");

  /* *** submited contact */
  $('.scheduled_contact_submit').bind("ajax:success", function(evt, data, status, xhr){
    if(data.success == true){
      resetFormAfterSuccess(this);
      customerScheduledRemove(data);

      if(data.data.result == <%= Guara::ActiveCrm::Scheduled::Contact::SCHEDULED %>){
        contactScheduledsAppend(data);
      }

      dealAppend(data.data.deal);

      showTempOkMessage();
      
    }
  })
  .bind("ajax:error", function(evt, xhr, status, error){
    catchFormAjaxError(this, evt, xht, status, error);
  });;
});

function completed(type, value){
  var deal_result = value;

  if((value == <%= Guara::ActiveCrm::Scheduled::Contact::SCHEDULED %>) && (type == 'result')) {
    $('.custom-span3-big').removeClass('disabled');
  } else {
    $('.custom-span3-big').addClass('disabled');
  }

  $('#active_crm_scheduled_contact_scheduled_at').val('');
  $('#active_crm_scheduled_contact_result').val('');
  $('#active_crm_scheduled_contact_classified_id').val('');

  if(type=='result'){
    $('#active_crm_scheduled_contact_result').val(deal_result);
    $('.btn-submit').show();
  }
  else if(type=='classified'){
    deal_result = 2;
    $('#active_crm_scheduled_contact_result').val(deal_result);
    $('#active_crm_scheduled_contact_classified_id').val(value);
    $('.btn-submit').show();
  }
  else{
    $('.btn-submit').hide();
  }

  contact_status_label(deal_result);
}

/** **
 * Labels status
 *
 */
function contact_status_label(value) {
  var labels = ["<%= I18n.t("active_crm.contact.result.accepted") %>", 
                 "<%= I18n.t("active_crm.contact.result.denied") %>",
                 "<%= I18n.t("active_crm.contact.result.scheduled") %>"],
      badges = [".badge-success",
                ".badge-important",
                ".badge-warning"],
      $label_container = $('#active_crm_scheduled_contact_status_label_panel'),
      $label = $('#active_crm_scheduled_contact_status_label');
      
  /* badges */
  for (var b in badges) { $(badges[b], $label_container).addClass('hide'); }
  $(badges[value-1], $label_container).removeClass('hide');
 
  $label.html(labels[value-1]);
  $label_container.removeClass('hide');
}


function verify_form(form){

  if ($('#active_crm_scheduled_contact_result').val().toString().trim()=='') {
    ScheduledContacts.open_dialog_info("<%= I18n.t('activerecord.errors.messages.record_invalid') %>", "<%= I18n.t('active_crm.scheduled.validation.result.empty'); %>");
    return false;
  }

  if ($('#active_crm_scheduled_contact_activity').val().toString().trim()=='') {
    ScheduledContacts.open_dialog_info("<%= I18n.t('activerecord.errors.messages.record_invalid') %>", "<%= I18n.t('active_crm.scheduled.validation.activity.empty'); %>");
    return false;
  }

  if($('#active_crm_scheduled_contact_result').val()=='<%= Guara::ActiveCrm::Scheduled::Contact::SCHEDULED %>'){
    var date = $.datepicker.formatDate('dd/mm/yy', $( "#datepicker" ).datepicker('getDate'));
    $('#active_crm_scheduled_contact_scheduled_at').val(date+' '+$('#hour').val());
  } else {
    $('#active_crm_scheduled_contact_scheduled_at').val(''); 
  }

  form.submit();

  return true;
}

function contactScheduledsAppend(data) {
  var $tr;

  $tr = $($.parseHTML(HoganTemplates["active_crm/scheduled_contact_tr"].render(data.data, {})));

  $tr.on('click',function(){
      ScheduledContacts.slide_customer_content($(this), true);
  });
  $('#customer-scheduled tbody').append($tr);
}

function dealAppend(deal) {
  var $tr;
  deal["date_start"] = timeRelativeString(Date.now(), deal.date_start);
  $tr = $($.parseHTML(HoganTemplates["active_crm/deal_tr"].render(deal, {}).trim()));

  $tr.on('click', function(){
      ScheduledContacts.slide_customer_content($(this), true);
  });
  $('#customer-deals tbody').append($tr); 
}

function customerScheduledRemove(data) {
  $('#customer-scheduled tbody tr[customer-id="'+data.data.customer_id+'"][contact-id="'+data.data.contact_id+'"]').remove();
}

function showTempOkMessage() {
  var funciton_on_close_msg = (function() {
    ScheduledContacts.scroll_top();
    ScheduledContacts.dialog_call_close();
  });

  ScheduledContacts.open_dialog_info("<%= I18n.t('helpers.forms.new_success') %>",  "<%= I18n.t('helpers.forms.new_success') %>", funciton_on_close_msg);

  setTimeout(function() { 
    $( "#dialog-confirm" ).dialog( "close" );
    funciton_on_close_msg();
  }, 1000);
}

function resetFormAfterSuccess(form) {
  var $form = $(form);
  $form.find('textarea,input[type="text"],input[type="file"]').val("");
  showMessage("<%= I18n.t('active_crm.scheduled.call_completed') %>");
}

function catchFormAjaxError(form, evt, xht, status, error) {
  var $form = $(form),
      errors,
      errorText;

      try {
        // Populate errorText with the comment errors
        errors = $.parseJSON(xhr.responseText);
      } catch(err) {
        // If the responseText is not valid JSON (like if a 500 exception was thrown), populate errors with a generic error message.
        errors = { message: "Por favor, ocorreu um erro ao tratar a resposta do servidor, tente mais tarde."};
      }

      // Build an unordered list from the list of errors
      errorText = "<div class=\"alert alert-block alert-error\"><h4>Erros ao registrar dados:</h4> \n<ul>";

      for ( error in errors ) {
        errorText += "<li>" + error + ': ' + errors[error] + "</li> ";
      }

      errorText += "</ul></div>";

      $(document).scrollTop();

      // Insert error list into form
      $form.find('div.validation-error').html(errorText);
}