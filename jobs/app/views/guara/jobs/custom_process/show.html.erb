
<%= render :partial => "guara/jobs/jobs/navbar", 
      :locals => { active: :custom_process } %>

<section class="show">
	<ul class="thumbnails">
  		<li class="span9">
		    <div class="thumbnail">
		      <div class="caption">
				<legend><%= @custom_process.name %></legend>
				<div class="container">
					

			          <div class="box-gray-data span4">
			            
			            <div class="widthAuto" id="process">
			            	
			            		<b><%= t('jobs.custom_process.name') %></b> 
			            		<%= @custom_process.name %></br>

			            		<b><%= t('jobs.custom_process.id') %></b>
								<%= @custom_process.id %>
			            		
			            		<div class="ep"></div>
			            </div>
			          </div>


			        <div id="position_steps_connecteds" class="span4" style="height:300px;padding:10px;">
			        	
			        </div>

			    </div>
			    <a id="custom_steps" href="javascript:void(0);" class="btn">
		          	<%= t('jobs.custom_process.edit') %>
		        </a>

		        <a id="save_steps" href="javascript:void(0);" class="btn" disabled="disabled">
		          	<%= t('jobs.custom_process.save_steps') %>
		        </a>
			</div>
		</li>

		<li class="span3">
			<div class="thumbnail">
				<legend><%= t('jobs.custom_process.step') %></legend>
				<a id="add_step" href="javascript:void(0);" class="btn" >Nova Etapa</a>
				<div class="container_steps">
					<%  @steps.collect { |f| %>
						<div class="w step widthAuto step_click" id="<%=f.send(:id)%>" step_id="<%=f.send(:id)%>">
							<span class="step_click" step_id="<%=f.send(:id)%>"><%=f.send(:name)%></span>
							<div class="ep"></div>
						</div>
					<%	} %>
				</div>
				<%= render :partial => 'dialog_step' %>
			</div>
		</li>
	</ul>
</section>


<ul id="dropdown-menu-step" class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
	<li><a id="edit-step" tabindex="-1" href="javascript:void(0);">Editar</a></li>
	<li><a id="delete-step" tabindex="-1" href="javascript:void(0);">Deletar</a></li>
</ul>

<div id="dialog_attr_step" class="modal hide fade" style="width:940px;">
	  <div class="modal-header">
	    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
	    <h3>Customizar Campos da Etapa</h3>
	  </div>
	  
	  <div class="modal-body" id="form_build">
	    <%= render :partial => 'panel_build_form' %>
	  </div>

</div>

<script type="text/javascript">
	jQuery.fn.center = function () {
	    this.css("position","absolute");
	    this.css("top", Math.max(0, ((jQuery(window).height() - jQuery(this).outerHeight()) / 2) + 
	                                                jQuery(window).scrollTop()) + "px");
	    this.css("left", Math.max(0, ((jQuery(window).width() - jQuery(this).outerWidth()) / 2) + 
	                                                jQuery(window).scrollLeft()) + "px");
	    return this;
	}

	//pega os filhos da Etapa Informada
	function son(id, con_id){
		cons = jsPlumb.getConnections({source: id});
		var sons = [];
		if(!con_id){
			con_id = 0;
			window.level_son = 0;	
		} 
		else{
			level_son ++;
		}
		
		if(cons.length>0){
			for(var j in cons){
				var cons2 = cons;

				if(cons2[j].id){
					con_id2 = parseInt(cons2[j].id.split('_')[1]);
					if(parseInt(con_id)<con_id2){
						sons.push({
							id: cons2[j].targetId,
							con_id: con_id2,
							level: level_son,
							id_real: cons2[j].id, 
							source_id: cons2[j].sourceId,
							sons: son(cons2[j].targetId, con_id2)
						});
					}
				}
			}
		}

		return sons;
	}

	function setPositionStepsConnecteds(call){
		var container = $('#position_steps_connecteds'),
		position 	  = container.position();
		position.top += 20;
		var params	  = {
			padding: 70,
			position: (container.position()),
			maxLeft: (container.width() + position.left + 70),
			current: position,
			isOrverflow: function(a){
				var me = this;
				if(me.getLeft(a) > me.maxLeft){
					return true;
				}
				else{
					return false;
				}
			},

			getLeft: function(a){
				var me = this;
				if(me.current.left == me.position.left){
					return me.current.left + 100;
				}
				else{
					return me.current.left + a.width() + 100;
				}
			},

			setLeft: function(a){
				var me = this;
				if(me.current.left == me.position.left){
					me.current.left += me.padding - 20;
				}
				else{
					me.current.left += a.width() + me.padding;
				}
			},

			setPosition: function(a){
				var me = this;
				if(a.hasClass('step')){
					if(me.isOrverflow(a)){
						me.current.top  = me.current.top + a.height() + me.padding; 
						me.current.left = me.position.left;
					}
					me.setLeft(a);
					a.offset(me.current);
				}
			}
		};

		call(params);
	}

	function alertDialog(msg, error){
		var dialog = jQuery('.alert-ajax');
		if(error){
			dialog
				.removeClass('alert-success')
				.addClass('alert-error');
		}
		else{
			dialog
				.removeClass('alert-error')
				.addClass('alert-success');
		}
		dialog
			.html(msg)
			.show();
			setTimeout(function(){
				dialog.fadeOut(400);
			}, 2000);
	}

	jQuery(document).bind("click", function(e){
		if(!jQuery(e.target).hasClass('step_click')){
			jQuery('#dropdown-menu-step').css('display', 'none');
		}
	});

	jQuery(document).bind("contextmenu", function(e){
		if(jQuery(e.target).hasClass('step_click')){
			e.preventDefault();
			var off = jQuery(e.target).offset();
			off.top += 45;
			jQuery('#dropdown-menu-step')
				.css('display', 'block')
				.attr('step_id', jQuery(e.target).attr('step_id'))
				.offset(off);
		}
	});

	jQuery('#edit-step').click(function(e){
		window.step_id = jQuery("#dropdown-menu-step").attr('step_id');
		$('#dialog_attr_step').modal('show');
		$('#myTab a[href="#add_field"]').tab('show'); 
		jQuery('#dialog_attr_step').css('display', 'block', 'important');
		getElsSaved(step_id);
	});

	/*jQuery('.step_widget_auto').click(function(e){
		var step_id = jQuery("#dropdown-menu-step").attr('step_id');
		var widget  = jQuery(this).attr('type-widget');
		jQuery.ajax({
		  type: "POST",
		  url: "/custom_process/step_set_widget",
		  data: { 
		  	'step[id]': step_id,
		  	'step[widget]': widget,
		  	'step[custom_process_id]': <%= @custom_process.id %>
		  }
		}).done(function( d ) {
			alert('Campos Salvos!');
		}).fail(function(d){
			alert('Erro ao salvar Campos!');
		});
	});*/


	jQuery('#delete-step').click(function(e){
		window.step_id = jQuery(jQuery(this).closest("ul")[0]).attr('step_id');

		if(jsPlumb.select({target: step_id}).length==0){
			jQuery.ajax({
			  type: "DELETE",
			  url: "/step/"+step_id
			}).done(function( d ) {
				jsPlumb.detachAllConnections(step_id);
				jQuery('#'+step_id).remove();
				alert('Etapa Deletada!');
			}).fail(function(d){
				alert('Erro ao deletar etapa!');
			});
		}
		else{
			alert('Etapa Não pode ser Deletada por ter Conexões');
		}
	});

	jQuery('#custom_steps').click(function(e){
		jsPlumbDemo.start();
	});

	jQuery('#save_steps').click(function(e){
		if(jsPlumbDemo.started){
			var sons = son('process');
			if(sons.length>0){
				jQuery.ajax({
				  type: "POST",
				  url: "<%= custom_process_steps_path %>",
				  data: { 
				  	'custom_process[json]': JSON.stringify(sons),
				  	'custom_process[custom_process_id]': <%= @custom_process.id %>
				  }
				}).done(function( d ) {
					alert('Etapas Salvas!');
				}).fail(function(d){
					
				});
			}
			else{
				alertDialog('Customize as Etapas do Processo!', true);
			}
		}
	});

	jQuery('#add_step').click(function(e){
		$('#dialog_step').modal('show');
	});

	jQuery('#save_step').click(function(){
		var name = jQuery.trim( jQuery('#name').val()	);
		if (name != ""){
			jQuery.ajax({
				  type: "POST",
				  url: "<%= step_index_path %>",
				  data: { 
				  	'step[name]': name,
				  	'step[custom_process_id]': <%= @custom_process.id %>
				  }
				}).done(function( d ) {
					jQuery('<div></div>')
						.attr('id', d.id)
						.addClass('w step widthAuto')
						.append(jQuery('<span></span>').html(d.name))
						.append(jQuery('<div></div>').addClass('ep'))
						.appendTo(jQuery('.container_steps'));

					$('#dialog_step').modal('hide');
					alertDialog('Etapa Salva', false);
					jQuery('#name').val('');
					jsPlumbDemo.init();

				}).fail(function(d){
					jQuery('#name').focus();
					alertDialog('Erro ao Salvar', true);
				});
		} 
	});

	window.json_elements_saved = {};
	<%
		if @jsonNext.size > 0 and @jsonNext[0][:next] != nil %>
			jsPlumbDemo.start();
			setTimeout(function(){
		<%
		@jsonNext.each do |n|
			#criando conexão de steps 
			if n[:next] != nil%>
			jsPlumb.connect({source:"<%=n[:id]%>", target:"<%=n[:next]%>"});
			<% end %>
			if(!json_elements_saved["<%=n[:id]%>"]){
				json_elements_saved["<%=n[:id]%>"] = [];
			}
			<%
			#atribuindo attrs ao step
			if n[:attrs].size > 0 
				@i = 0
				n[:attrs].each do |at| 
				%>
				  	json_elements_saved["<%=n[:id]%>"].push({
						title: "<%=at[:title]%>", widget: "<%=at[:widget]%>", required: <%= at[:required] == true ? 1 : 0 %>, resume: "<%= at[:resume] == true ? 1 : 0 %>", type_field: "<%=at[:type_field]%>", position: "<%=at[:position]%>", id: <%= @i %>, column: "<%=at[:column]%>",  options: "<%=at[:options]%>"
					});
				<% @i = @i + 1
				 end	
			end
		end %>
		}, 500);
		<% end
	%>

	function getElsSaved(id){
		var elsaved = json_elements_saved;
		form_builder.clear_fields();

		if(elsaved[id]){
			var count = elsaved[id].length;
			for (var i=0; i < count; i++){
				var el = elsaved[id][i];
        		form_builder.insert_el(el.type_field);
        		form_builder.update_el(el);
			}
		}
	}

    setPositionStepsConnecteds(function(a){
    	<% @jsonNext.each do |n| %>
    		a.setPosition($("#<%=n[:id]%>"));
    	<% end %>
    });

    //START BUILD FORM
    $('.insert_elements').click(function(e){
        var type_field = $(e.currentTarget).attr('type-el');
        form_builder.insert_el(type_field);
    });

    $( "#container_form_fields" ).sortable({ 
        axis: "y",
        update: function( event, ui ) {
            form_builder.updatePositions();
        }
    });
    $( "#container_form_fields" ).disableSelection();
    $( ".datepicker" ).datepicker();

    $('#save_attrs_to_step').click(function(){
        if(form_builder.elements_inserteds.length>0){
            var json = form_builder.getJSON();
            jQuery.ajax({
			  type: "POST",
			  url: "add_attr_to_steps",
			  data: { 
			  	elements: json,
	        	step_id: step_id
			  }
			}).done(function( d ) {
				json_elements_saved[step_id] = [];
				if(d.attrs){
					for(var i = 0; i < d.attrs.length; i++){
						json_elements_saved[step_id].push(d.attrs[i]);
					}
				}
				alert('Campos Salvos!');
			}).fail(function(d){
				alert('Erro ao salvar Campos!');
			});

        }
    });
    
</script>